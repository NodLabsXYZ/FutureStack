import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../../styles/Home.module.css'
import Header from '../../components/uploader/header'
import UploadImages from '../../components/uploader/uploadImages'
import { useEffect, useState } from 'react'
import { formatBytes } from '../../utils/formatters';
import UploadMetadata from '../../components/uploader/uploadMetadata'
import { getCostToSaveBytesInDollars } from '../../utils/costEstimator'
import EstimatedCost from '../../components/uploader/estimatedCost'
import UploadModal from '../../components/uploader/uploadModal';
import Footer from '../../components/uploader/footer'
import Error from '../../components/uploader/error';
const Home: NextPage = () => {
  const [imageFiles, setImageFiles] = useState<File[]>([]);
  const [imageBytes, setImageBytes] = useState(0);
  const [imageCost, setImageCost] = useState(0);
  const [metadataFiles, setMetadataFiles] = useState<File[]>([]);
  const [metadataBytes, setMetadataBytes] = useState(0);
  const [metadataCost, setMetadataCost] = useState(0);
  const [openModal, setOpenModal] = useState(false);
  const [showError, setShowError] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');
  const updateImageBytes = async (bytes: number) => {
    console.log('updateImageBytes :>> ', bytes);
    setImageBytes(bytes);
    const imageCost = await getCostToSaveBytesInDollars(bytes);
    setImageCost(imageCost);
  }

  const updateMetadataBytes = async (bytes: number) => {
    console.log('updateMetadataBytes :>> ', bytes);
    setMetadataBytes(bytes);
    const metadataCost = await getCostToSaveBytesInDollars(bytes);
    setMetadataCost(metadataCost);
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Bulk NFT Upload</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
      </Head>

      <Header />
      <main className={styles.main}>
        <Error showError={showError} message={errorMessage} />
        <div>
          Before uploading your metadata, make sure it complies with&nbsp;
          <a href="https://docs.opensea.io/docs/metadata-standards" target='_blank' rel="noreferrer" className="text-blue-600 visited:text-purple-600">
            OpenSea&apos;s Metadata Standards
          </a>
          &nbsp;if your NFTs will be on Ethereum or Polygon.
        </div>
        <br />
        <br />
        <UploadImages setImageFiles={setImageFiles} updateImageBytes={updateImageBytes} />
        <br />
        <br />
        <UploadMetadata setMetadataFiles={setMetadataFiles} updateMetadataBytes={updateMetadataBytes} />
        <br />
        <br />
        

        {
          imageBytes + metadataBytes === 0 ?
            (<></>) :
            (
              <p>Upload size: {formatBytes(imageBytes + metadataBytes)}</p>
            )
        }

        {
          imageCost + metadataCost === 0 ? (<></>) : (
            <div>
              <EstimatedCost cost={imageCost + metadataCost} />
            </div>
          )
        }

        {
          imageBytes > 0 && metadataBytes > 0 ?
            (
              <>
                <br /><button
                  type="button"
                  className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                  onClick={() => setOpenModal(true)}
                >
                  Continue
                </button>
              </>
            ) :
            (<></>)
        }

      </main>

      <UploadModal
        open={openModal}
        setOpenModal={setOpenModal}
        setShowError={setShowError}
        setErrorMessage={setErrorMessage}
        cost={imageCost + metadataCost}
        imageFiles={imageFiles}
        metadataFiles={metadataFiles}
      />

      {/* <Footer /> */}
    </div>
  )
}

export default Home
