generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model profile {
  id         String    @id @default(uuid()) @db.Uuid
  username   String?   @unique
  email      String?   @unique
  avatar_url String?
  user_id    String    @unique @db.Uuid
  secret_key String?   @default(uuid()) @db.Uuid
  created_at DateTime  @default(now())
  updated_at DateTime? @db.Timestamptz(6)
  teams      team[]
}

model project {
  id         String     @id @default(uuid()) @db.Uuid
  title      String
  team_id    String     @db.Uuid
  team       team       @relation(fields: [team_id], references: [id])
  created_at DateTime   @default(now())
  updated_at DateTime?  @db.Timestamptz(6)
  contracts  contract[]
  assets     asset[]
}

model team {
  id         String    @id @default(uuid()) @db.Uuid
  title      String
  created_at DateTime  @default(now())
  updated_at DateTime? @db.Timestamptz(6)
  profiles   profile[]
  projects   project[]
}

model contract {
  id          String    @id @default(uuid()) @db.Uuid
  name        String
  info        Json
  opensource  Boolean   @default(false)
  compiled_at DateTime
  project_id  String    @db.Uuid
  project     project   @relation(fields: [project_id], references: [id])
  created_at  DateTime  @default(now())
  updated_at  DateTime? @db.Timestamptz(6)
}

model asset {
  id                   String    @id @default(uuid()) @db.Uuid
  image_uri            String
  metadata             Json
  onchain_image_uri    String?
  onchain_metadata_uri String?
  project              project?  @relation(fields: [project_id], references: [id])
  project_id           String?   @db.Uuid
  created_at           DateTime  @default(now())
  updated_at           DateTime? @db.Timestamptz(6)
}
