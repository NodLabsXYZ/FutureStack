generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model profile {
  id         String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  username   String?   @unique
  email      String?   @unique
  avatar_url String?
  user_id    String    @unique @db.Uuid
  secret_key String?   @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  created_at DateTime  @default(now())
  updated_at DateTime? @db.Timestamptz(6)
  teams      team[]
}

model project {
  id          String                @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  title       String
  team_id     String                @db.Uuid
  team        team                  @relation(fields: [team_id], references: [id])
  created_at  DateTime              @default(now())
  updated_at  DateTime?             @db.Timestamptz(6)
  contracts   contract[]
  assets      asset[]
  deployments contract_deployment[]
}

model team {
  id         String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  title      String
  created_at DateTime  @default(now())
  updated_at DateTime? @db.Timestamptz(6)
  profiles   profile[]
  projects   project[]
}

model contract {
  id          String                @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  name        String
  info        Json
  opensource  Boolean               @default(false)
  compiled_at DateTime
  project_id  String                @db.Uuid
  project     project               @relation(fields: [project_id], references: [id])
  created_at  DateTime              @default(now())
  updated_at  DateTime?             @db.Timestamptz(6)
  deployments contract_deployment[]
}

model contract_deployment {
  id          String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  info        Json
  deployed_at DateTime
  project_id  String    @db.Uuid
  project     project   @relation(fields: [project_id], references: [id])
  contract_id String    @db.Uuid
  contract    contract  @relation(fields: [contract_id], references: [id])
  created_at  DateTime  @default(now())
  updated_at  DateTime? @db.Timestamptz(6)
}

model asset {
  id                   String    @id @default(dbgenerated("extensions.uuid_generate_v4()")) @db.Uuid
  image_uri            String
  metadata             Json
  onchain_image_uri    String?
  onchain_metadata_uri String?
  project              project?  @relation(fields: [project_id], references: [id])
  project_id           String?   @db.Uuid
  created_at           DateTime  @default(now())
  updated_at           DateTime? @db.Timestamptz(6)
}
